{"version":3,"sources":["components/tracks/DatePicker.js","components/tracks/RadarChart.js","components/tracks/TracksSection.js","components/trends/FeatureSelect.js","components/trends/LineChart.js","components/trends/TrendsSection.js","components/about/AboutSection.js","components/navigation/Section.js","components/navigation/Tab.js","components/navigation/SmallTab.js","components/navigation/Sidebar.js","App.js","index.js"],"names":["DatePicker","props","initValue","submitFunc","useState","inputValue","setInputValue","today","Date","toISOString","slice","className","onSubmit","e","preventDefault","type","value","onChange","target","min","max","am4core","am4themes_animated","Radar","data","CHART_ID","chart","am4charts","startAngle","endAngle","innerRadius","numberFormatter","numberFormat","categoryAxis","yAxes","push","dataFields","category","renderer","grid","template","strokeOpacity","labels","horizontalCenter","fontSize","adapter","add","fill","dataItem","index","colors","getIndex","minGridDistance","valueAxis","xAxes","strictMinMax","fillOpacity","series1","series","valueX","categoryY","clustered","columns","strokeWidth","radarColumn","cornerRadius","series2","tooltipText","id","style","width","height","TracksSection","setData","isLoaded","setIsLoaded","error","setError","getData","input","a","param","fetch","response","status","statusText","json","length","useEffect","averages","songs","map","item","i","rank","artist","track","FeatureSelect","name","Line","lightWhite","dateFormatter","dateFormat","dateAxis","gridIntervals","setAll","timeUnit","count","stroke","opacity","seriesValue","dateX","valueY","tensionX","legendSettings","labelText","strokeDasharray","seriesRolling","cursor","xAxis","lineX","lineY","snapToSeries","legend","position","contentAlign","fontWeight","itemContainers","paddingTop","paddingBottom","marginTop","features","require","TrendsSection","rel","href","feature","title","desctiption","AboutSection","Section","styled","div","activeTab","Tab","SmallTab","Sidebar","handleClick","onClick","App","setActiveTab","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcedb714.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst DatePicker = (props) => {\n  const { initValue, submitFunc } = props;\n  const [inputValue, setInputValue] = useState(initValue);\n  const today = new Date().toISOString().slice(0, 10);\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue) {\n      submitFunc(inputValue);\n    }\n  };\n  return (\n    <form className='topBar' onSubmit={handleSubmit}>\n      <input\n        className='inputField'\n        type='date'\n        value={inputValue}\n        onChange={handleChange}\n        min='1958-07-27'\n        max={today}\n      />\n      <input className='inputBtn' type='submit' value='Go' />\n    </form>\n  );\n};\n\nexport default DatePicker;\n","import * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\nam4core.useTheme(am4themes_animated);\n\nconst Radar = (props) => {\n  const { data } = props;\n  const CHART_ID = 'radialChart';\n  const lightWhite = 'rgb(230, 230, 230)';\n\n  var chart = am4core.create(CHART_ID, am4charts.RadarChart);\n  chart.data = data;\n\n  // Make chart not full circle\n  chart.startAngle = -90;\n  chart.endAngle = 180;\n  chart.innerRadius = am4core.percent(30);\n\n  // Set number format\n  chart.numberFormatter.numberFormat = '###';\n\n  // Create axes\n  var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n  categoryAxis.dataFields.category = 'feature';\n  categoryAxis.renderer.grid.template.strokeOpacity = 0;\n  categoryAxis.renderer.labels.template.horizontalCenter = 'right';\n  categoryAxis.renderer.labels.template.fontSize = 16;\n  categoryAxis.renderer.labels.template.adapter.add(\n    'fill',\n    function (fill, target) {\n      return target.dataItem.index >= 0\n        ? chart.colors.getIndex(target.dataItem.index)\n        : fill;\n    }\n  );\n  categoryAxis.renderer.minGridDistance = 10;\n\n  var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n  valueAxis.renderer.grid.template.strokeOpacity = 0;\n  valueAxis.min = 0;\n  valueAxis.max = 100;\n  valueAxis.strictMinMax = true;\n  valueAxis.renderer.labels.template.fontSize = 11;\n  valueAxis.renderer.labels.template.fill = am4core.color(lightWhite);\n  valueAxis.renderer.labels.template.fillOpacity = 0.8;\n\n  var series1 = chart.series.push(new am4charts.RadarColumnSeries());\n  series1.dataFields.valueX = 'full';\n  series1.dataFields.categoryY = 'feature';\n  series1.clustered = false;\n  series1.columns.template.fill = new am4core.color('#262626');\n  series1.columns.template.strokeWidth = 0;\n  series1.columns.template.radarColumn.cornerRadius = 5;\n\n  var series2 = chart.series.push(new am4charts.RadarColumnSeries());\n  series2.dataFields.valueX = 'mean';\n  series2.dataFields.categoryY = 'feature';\n  series2.columns.template.strokeWidth = 0;\n  series2.columns.template.tooltipText = '{mean}';\n  series2.columns.template.radarColumn.cornerRadius = 5;\n  series2.columns.template.adapter.add('fill', function (fill, target) {\n    return chart.colors.getIndex(target.dataItem.index);\n  });\n\n  return (\n    <div\n      id={CHART_ID}\n      style={{\n        width: '50%',\n        height: '300px'\n      }}\n    />\n  );\n};\n\nexport default Radar;\n","import { useState, useEffect } from 'react';\nimport DatePicker from './DatePicker';\nimport Radar from './RadarChart';\n\nconst TracksSection = () => {\n  const [data, setData] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getData = async (input) => {\n    setIsLoaded(false);\n    setError(false);\n\n    const endpoint = 'week';\n    const param = `${input}`;\n\n    const response = await fetch(`/api/${endpoint}/${param}`);\n    if (response.status > 299) {\n      setIsLoaded(true);\n      setError(response.statusText);\n      return;\n    }\n    let data = await response.json();\n    if (data.length === 0) {\n      setError('No Data Found');\n      setIsLoaded(true);\n    } else {\n      setData(data);\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getData(new Date().toISOString().slice(0, 10));\n  }, []);\n\n  return (\n    <div className='section'>\n      <DatePicker\n        submitFunc={getData}\n        initValue={new Date().toISOString().slice(0, 10)}\n      />\n      <div className='chartSection'>\n        <Radar data={data.averages} />\n      </div>\n      <div className='scroll'>\n        {error && <h1 className='error'>{error}</h1>}\n        {!isLoaded && <h1 className='loading'>. . .</h1>}\n        {isLoaded &&\n          !error &&\n          data.songs.map((item, i) => {\n            return (\n              <div className='trackRow' key={i}>\n                <h1 className='rowEl rank'>{item.rank}</h1>\n                <span className='trackData'>\n                  <h4 className='rowEl artist'>{item.artist}</h4>\n                  <h5 className='rowEl track'>{item.track}</h5>\n                </span>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default TracksSection;\n","import { useState } from 'react';\n\nconst FeatureSelect = (props) => {\n  const { submitFunc } = props;\n  const [inputValue, setInputValue] = useState();\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue) {\n      submitFunc(inputValue);\n    }\n  };\n  return (\n    <form className='topBar' onSubmit={handleSubmit}>\n      <select name='feature' className='inputField' onChange={handleChange}>\n        <option value='tempo'>Tempo</option>\n        <option value='energy'>Energy</option>\n        <option value='danceability'>Danceability</option>\n        <option value='instrumentalness'>Instrumentalness</option>\n        <option value='liveness'>Liveness</option>\n        <option value='speechiness'>Speechiness</option>\n        <option value='acousticness'>Acousticness</option>\n      </select>\n      <input className='inputBtn' type='submit' value='Go' />\n    </form>\n  );\n};\n\nexport default FeatureSelect;\n","import * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\nam4core.useTheme(am4themes_animated);\n\nconst Line = (props) => {\n  const { data } = props;\n  const CHART_ID = 'featureChart';\n  const lightWhite = 'rgb(230, 230, 230)';\n\n  let chart = am4core.create(CHART_ID, am4charts.XYChart);\n  chart.data = data;\n\n  chart.dateFormatter.dateFormat = 'yyyy';\n  let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n  dateAxis.gridIntervals.setAll([\n    { timeUnit: 'year', count: 1 },\n    { timeUnit: 'year', count: 5 },\n    { timeUnit: 'year', count: 10 }\n  ]);\n  dateAxis.renderer.grid.template.stroke = am4core.color(lightWhite);\n  dateAxis.renderer.labels.template.fontSize = 12;\n  dateAxis.renderer.labels.template.fill = am4core.color(lightWhite);\n  dateAxis.renderer.labels.template.opacity = 0.9;\n\n  let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n  valueAxis.renderer.grid.template.stroke = am4core.color(lightWhite);\n  valueAxis.renderer.labels.template.fontSize = 11;\n  valueAxis.renderer.labels.template.fill = am4core.color(lightWhite);\n  valueAxis.renderer.labels.template.opacity = 0.9;\n\n  let seriesValue = chart.series.push(new am4charts.LineSeries());\n  seriesValue.dataFields.dateX = 'year';\n  seriesValue.dataFields.valueY = 'value';\n  seriesValue.strokeWidth = 2;\n  seriesValue.tensionX = 0.8;\n  seriesValue.legendSettings.labelText = 'Annual Average';\n  seriesValue.stroke = am4core.color('rgb(68, 54, 119)');\n  seriesValue.strokeDasharray = '3,3';\n\n  let seriesRolling = chart.series.push(new am4charts.LineSeries());\n  seriesRolling.dataFields.dateX = 'year';\n  seriesRolling.dataFields.valueY = 'rolling';\n  seriesRolling.strokeWidth = 2;\n  seriesRolling.tensionX = 0.8;\n  seriesRolling.legendSettings.labelText = '3 Year Rolling Average';\n  seriesRolling.stroke = am4core.color('rgb(128,103,220)');\n\n  chart.cursor = new am4charts.XYCursor();\n  chart.cursor.xAxis = dateAxis;\n  chart.cursor.lineX.stroke = am4core.color(lightWhite);\n  chart.cursor.lineX.strokeWidth = 2;\n  chart.cursor.lineX.strokeDasharray = '2,2';\n  chart.cursor.lineY.stroke = am4core.color(lightWhite);\n  chart.cursor.lineY.strokeWidth = 2;\n  chart.cursor.lineY.strokeDasharray = '2,2';\n  chart.cursor.snapToSeries = [seriesValue, seriesRolling];\n\n  chart.legend = new am4charts.Legend();\n  chart.legend.position = 'bottom';\n  chart.legend.contentAlign = 'right';\n  chart.legend.labels.template.fontSize = 14;\n  chart.legend.labels.template.fontWeight = 300;\n  chart.legend.labels.template.fill = am4core.color(lightWhite);\n  chart.legend.labels.template.opacity = 0.9;\n  chart.legend.itemContainers.template.paddingTop = 0;\n  chart.legend.itemContainers.template.paddingBottom = 0;\n\n  return (\n    <div\n      id={CHART_ID}\n      style={{\n        width: '100%',\n        height: '350px',\n        marginTop: '10px'\n      }}\n    />\n  );\n};\n\nexport default Line;\n","import { useState, useEffect } from 'react';\nimport FeatureSelect from './FeatureSelect';\nimport Line from './LineChart';\n\nconst features = require('./features.json');\n\nconst TrendsSection = () => {\n  const [data, setData] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  const getData = async (input) => {\n    setIsLoaded(false);\n    setError(false);\n\n    const endpoint = 'analysis';\n    const param = `${input}`;\n\n    const response = await fetch(`/api/${endpoint}/${param}`);\n    if (response.status > 299) {\n      setIsLoaded(true);\n      setError(response.statusText);\n      return;\n    }\n    let data = await response.json();\n    if (data.length === 0) {\n      setError('No Data Found');\n      setIsLoaded(true);\n    } else {\n      setData(data);\n      setIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getData('tempo');\n  }, []);\n\n  return (\n    <div className='section'>\n      <FeatureSelect submitFunc={getData} initValue='tempo' />\n      {error && <h1 className='error'>{error}</h1>}\n      {!isLoaded && <h1 className='loading'>. . .</h1>}\n      <div className='chartSection'>\n        <Line data={data.data} />\n      </div>\n      <h4 className='audioFeatures'>\n        Audio Features (\n        <a\n          className='sourceLink'\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://developer.spotify.com/documentation/web-api/reference/#object-audiofeaturesobject'\n        >\n          Source\n        </a>\n        )\n      </h4>\n      <div className='featureDescription scroll'>\n        {features.map((feature, i) => {\n          return (\n            <p>\n              <b>{feature.title}: </b>\n              {feature.desctiption}\n            </p>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default TrendsSection;\n","const AboutSection = () => {\n  return (\n    <div className='section'>\n      <div className='aboutContent scroll'>\n        <h2>The Billboard Hot 100</h2>\n        <div className='aboutSection'>\n          <p>\n            The{' '}\n            <a href='https://www.billboard.com/charts/hot-100'>\n              Billboard Hot 100\n            </a>{' '}\n            is the music industry standard record chart in the United States for\n            songs, published weekly by Billboard magazine. Chart rankings are\n            based on sales (physical and digital), radio play, and online\n            streaming in the United States.\n          </p>\n          <p>\n            The first number one song of the Billboard Hot 100 was \"Poor Little\n            Fool\" by Ricky Nelson, on August 4, 1958.\n          </p>\n          <a href='https://en.wikipedia.org/wiki/Billboard_Hot_100'>Source</a>\n        </div>\n        <div className='aboutSection'>\n          <h2>API</h2>\n          <p>The API is written in Python with the Flask framework.</p>\n          {/* <h4>Tracks</h4> */}\n          <p>\n            <b>Tracks: </b>There is a separate weekly script, running weekly,\n            which scrapes the Billboard site page and adds each song into the\n            database.\n          </p>\n          <p>\n            <b>Data: </b>The weekly script uses the{' '}\n            <a href='https://spotipy.readthedocs.io/en/2.18.0/'>Spotipy</a>{' '}\n            library to get{' '}\n            <a href='https://developer.spotify.com/documentation/web-api/reference/#object-audiofeaturesobject'>\n              Spotify Audio Features\n            </a>{' '}\n            for each track, used for visualizations.\n          </p>\n          <p>\n            <b>Endpoints:</b>\n          </p>\n          <ul>\n            <li>\n              /api/week/{'<week>'} : get songs ranked 0-100 for {'<week>'} in\n              YYYY-MM-DD format\n            </li>\n            <li>\n              /api/artist/{'<artist>'} : get all appeareances where the artist\n              column contains {'<artist>'}\n            </li>\n            <li>\n              /api/track/{'<spotify_id>'} : get all appeareances of track where\n              the spotify_id column equals {'<spotify_id>'}\n            </li>\n            <li>\n              /api/analysis/{'<feature>'} : get the annual average and 3 year\n              rolling average for {'<feature>'}\n            </li>\n          </ul>\n        </div>\n        <div className='aboutSection'>\n          <h2>Front End</h2>\n          <p>The front end is written in Javascript with the React library.</p>\n          <p>\n            <b>Visualizations: </b>Visualizations are created using the{' '}\n            <a href='https://www.amcharts.com/'>amCharts</a> library.\n          </p>\n        </div>\n        <a href='https://github.com/augardiner/hot-100' className='githubLink'>\n          Source Code\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutSection;\n","import styled from 'styled-components';\n\nconst Section = styled.div`\n  ${(props) => (props.activeTab ? '' : 'display:none')}\n`;\n\nexport default Section;\n","import styled from 'styled-components';\n\nconst Tab = styled.div`\n  margin: 5px 0;\n  padding: 0 10px;\n  text-align: right;\n  font-size: 25px;\n  font-weight: 700;\n  cursor: pointer;\n  border-radius: 3px;\n  ${(props) => (props.activeTab ? 'color: rgb(128, 103, 220)' : '')};\n\n  :hover {\n    ${(props) => (props.activeTab ? '' : 'color: rgb(128, 103, 220)')};\n  }\n`;\n\nexport default Tab;\n","import styled from 'styled-components';\n\nconst SmallTab = styled.div`\n  margin: 5px 0;\n  padding: 0 10px;\n  text-align: right;\n  font-size: 20px;\n  font-weight: 700;\n  cursor: pointer;\n  border-radius: 3px;\n  ${(props) => (props.activeTab ? 'color: rgb(128, 103, 220)' : '')};\n\n  :hover {\n    ${(props) => (props.activeTab ? '' : 'color: rgb(128, 103, 220)')};\n  }\n`;\n\nexport default SmallTab;\n","import Tab from './Tab';\nimport SmallTab from './SmallTab';\n\nconst Sidebar = (props) => {\n  const { handleClick, activeTab } = props;\n  return (\n    <div className='sidebar'>\n      <div className='titleContainer'>\n        <div className='titleContent'>Hot 100</div>\n      </div>\n      <div className='tabContainer'>\n        <div>\n          <Tab onClick={handleClick} activeTab={activeTab === 0} id={0}>\n            Tracks\n          </Tab>\n          <Tab onClick={handleClick} activeTab={activeTab === 1} id={1}>\n            Trends\n          </Tab>\n        </div>\n        <div className='lowerTabs'>\n          <SmallTab onClick={handleClick} activeTab={activeTab === 3} id={3}>\n            About\n          </SmallTab>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { useState } from 'react';\nimport TracksSection from './components/tracks/TracksSection';\nimport TrendsSection from './components/trends/TrendsSection';\nimport AboutSection from './components/about/AboutSection';\nimport Section from './components/navigation/Section';\nimport Sidebar from './components/navigation/Sidebar';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState(0);\n  const handleClick = (e) => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== activeTab) {\n      setActiveTab(index);\n    }\n  };\n  return (\n    <div className='app'>\n      {/* sidebar */}\n      <Sidebar handleClick={handleClick} activeTab={activeTab} />\n\n      {/* content */}\n      <div className='content'>\n        <Section activeTab={activeTab === 0}>\n          <TracksSection />\n        </Section>\n        <Section activeTab={activeTab === 1}>\n          <TrendsSection />\n        </Section>\n        <Section activeTab={activeTab === 3}>\n          <AboutSection />\n        </Section>\n      </div>\n\n      {/* footer */}\n      <div className='footer'>\n        <span className='footerContainer'>\n          <p className='sig'>AUG | 2021</p>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}